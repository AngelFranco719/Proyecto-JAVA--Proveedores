package VerDatos;
import Actualizar_Datos.ActualizarDatos;
import Formularios_Inserts.JDPie;
import Formularios_Inserts.JPProveedor;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import proyecto_java_proveedores.ConexionBD;
import proyecto_java_proveedores.Pieza;
public class JP_VerDatos extends javax.swing.JPanel {
    ConexionBD Conexion_Actual; 
    List <String> Tablas=new ArrayList(); 
    List <String> Atributos=new ArrayList(); 
    List<List<String>>Resultados=new ArrayList(); 
    String Tabla;
    String Atributo;
    String Signos; 
    String Criterio;
    List<String> Resultado_Seleccionado=new ArrayList(); 
    public JP_VerDatos(ConexionBD Conexion_Actual) {
        initComponents();
        this.Conexion_Actual=Conexion_Actual; 
        InicializarTablas();
        InicializarSignos();
        T_Resultados.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Cb_Tablas = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Cb_Atributo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        JF_Criterio = new javax.swing.JTextField();
        B_Buscar = new javax.swing.JButton();
        Cb_Signos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        T_Resultados = new javax.swing.JTable();
        B_Actualizar = new javax.swing.JButton();
        B_Eliminar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        setMaximumSize(new java.awt.Dimension(607, 420));
        setMinimumSize(new java.awt.Dimension(607, 420));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Buscador: ");

        Cb_Tablas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Cb_Tablas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Cb_TablasItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Selecciona una Tabla: ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Selecciona un Atributo:");

        Cb_Atributo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Agrega un Criterio:");

        B_Buscar.setText("Buscar");
        B_Buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B_BuscarMouseClicked(evt);
            }
        });
        B_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_BuscarActionPerformed(evt);
            }
        });

        Cb_Signos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        T_Resultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(T_Resultados);

        B_Actualizar.setText("Actualizar Selección");
        B_Actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B_ActualizarMouseClicked(evt);
            }
        });
        B_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ActualizarActionPerformed(evt);
            }
        });

        B_Eliminar.setText("Eliminar Selección");
        B_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_EliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Cb_Signos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JF_Criterio, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Cb_Tablas, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(jLabel3)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cb_Atributo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(B_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(B_Actualizar)
                                .addGap(18, 18, 18)
                                .addComponent(B_Eliminar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cb_Tablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(Cb_Atributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(JF_Criterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B_Buscar)
                    .addComponent(Cb_Signos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_Actualizar)
                    .addComponent(B_Eliminar))
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void B_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_BuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_BuscarActionPerformed

    private void Cb_TablasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Cb_TablasItemStateChanged
       try{
        InicializarCampos(Cb_Tablas.getSelectedItem().toString());
       }catch(Exception e){
       
       }
    }//GEN-LAST:event_Cb_TablasItemStateChanged

    private void B_BuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_BuscarMouseClicked
       try{
           Tabla=Cb_Tablas.getSelectedItem().toString();
           Atributo=Cb_Atributo.getSelectedItem().toString();
           Signos=getSigno();
           Criterio=JF_Criterio.getText();
            InicializarTabla();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null,"Ingresa los datos correctamente.");
       }
        
    }//GEN-LAST:event_B_BuscarMouseClicked

    private void B_ActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_ActualizarMouseClicked
        this.Resultado_Seleccionado=this.getSelected(); 
        String Tabla=this.Cb_Tablas.getSelectedItem().toString();
        JOptionPane.showMessageDialog(null, Resultado_Seleccionado); 
        if(Tabla.equals("compra")||Tabla.equals("factura")||Tabla.equals("oferta")){
            ActualizarDatos Formulario=new ActualizarDatos(Conexion_Actual, Tabla, Resultado_Seleccionado,this); 
        } else actualizarSeleccion();
        
    }//GEN-LAST:event_B_ActualizarMouseClicked

    private void B_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ActualizarActionPerformed
        
    }//GEN-LAST:event_B_ActualizarActionPerformed

    private void actualizarSeleccion(){
        int seleccionado=T_Resultados.getSelectedRow();
        
        
        // Asegurarse de que hay una fila seleccionada
        if (seleccionado != -1) {
            String id = T_Resultados.getValueAt(seleccionado, 0).toString();
            String dato1 = T_Resultados.getValueAt(seleccionado, 1).toString();
            String dato2 = T_Resultados.getValueAt(seleccionado, 2).toString();
            String dato3 = T_Resultados.getValueAt(seleccionado, 3).toString();
            String dato4 = T_Resultados.getValueAt(seleccionado, 4).toString();
            String dato5 = T_Resultados.getValueAt(seleccionado, 5).toString();
            String dato6 = T_Resultados.getValueAt(seleccionado, 6).toString();
            String dato7 = T_Resultados.getValueAt(seleccionado, 7).toString();
            
            String tablaSeleccionada = Cb_Tablas.getSelectedItem().toString();
            
            switch (tablaSeleccionada) {
                case "proveedor":
                    // Crear una instancia del formulario de actualización
                    JPProveedor formularioActualizar = new JPProveedor(Conexion_Actual, true);
                    // Llenar los campos del formulario con los datos capturados
                    formularioActualizar.cargarDatos(id ,dato1, dato2, dato3, dato4, dato5, dato6, dato7);
                    // Mostrar el formulario
                    mostrarFormulario(formularioActualizar, "Actualizar proveedor");
                    break;
                case "pieza":
                    // Crear el objeto Pieza
                    Pieza pieza = new Pieza();
                    pieza.SetPieza(id, dato1, dato2, dato3, dato4, dato5, dato6, dato7);
                    // Crear una instancia del formulario de actualización
                    JDPie formularioActualizarPz = new JDPie(this, Conexion_Actual, true);
                    formularioActualizarPz.cargarDatos(pieza);
                    // Mostrar el formulario
                    mostrarForm2(formularioActualizarPz, "Actualizar Pieza");
                break;
                    
                default:
                    JOptionPane.showMessageDialog(this, "Formulario para la tabla seleccionada no disponible.");
                    break;
            }            
            
            
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una fila para actualizar", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void mostrarFormulario(JPanel panel, String titulo) {
        // Crea un JFrame o JDialog para mostrar el formulario de actualización
        JDialog dialogo = new JDialog();
        dialogo.setTitle(titulo);
        dialogo.setContentPane(panel);
        dialogo.pack();
        dialogo.setLocationRelativeTo(null);
        dialogo.setVisible(true);
    }
    
    private void mostrarForm2(JDialog dialogo, String titulo) {
    dialogo.setTitle(titulo);
    dialogo.pack();
    dialogo.setLocationRelativeTo(null);
    dialogo.setVisible(true);
}
    
    private void B_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_EliminarActionPerformed
        // TODO add your handling code here:
       // Obtener el modelo de la tabla
    DefaultTableModel model = (DefaultTableModel) T_Resultados.getModel();

    // Obtener la fila seleccionada
    int selectedRow = T_Resultados.getSelectedRow();
    String Tabla=Cb_Tablas.getSelectedItem().toString();
    try{
    // Verificar que se ha seleccionado una fila
    if (selectedRow != -1) {
        // Eliminar la fila del modelo
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que deseas eliminar la fila seleccionada?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
        int id=Integer.parseInt(Resultados.get(selectedRow).get(0));
        Conexion_Actual.EliminarDatos(Tabla,id);
        model.removeRow(selectedRow);
        JOptionPane.showMessageDialog(null, "Fila eliminada exitosamente.");
        } else {
            // Mostrar mensaje si la eliminación ha sido cancelada
            JOptionPane.showMessageDialog(null, "Eliminación cancelada.");
        }
    } else {
        // Mostrar un mensaje si no se ha seleccionado ninguna fila
        JOptionPane.showMessageDialog(null, "Selecciona una fila para eliminar.");
    }
    }catch(Exception e){
           JOptionPane.showMessageDialog(null,"Ingresa los datos correctamente.");
       }
    }//GEN-LAST:event_B_EliminarActionPerformed
    private void InicializarTablas(){
        Tablas=Conexion_Actual.GetTablasDisponibles();
        Cb_Tablas.removeAllItems();
        for(String Tabla : Tablas){
            Cb_Tablas.addItem(Tabla); 
        }
    }
    
    public void InicializarTabla(){
        Resultados=Conexion_Actual.getResultBusqueda(Tabla,Atributo,Signos,Criterio);
        DefaultTableModel model=new DefaultTableModel();
        for(String atributo : Atributos){
            model.addColumn(atributo);
        }
        for(List<String>fila : Resultados){
            model.addRow(fila.toArray());
        }
        T_Resultados.setModel(model);
        T_Resultados.setVisible(true);
        T_Resultados.repaint();
    }
    
    private void InicializarSignos(){
        Cb_Signos.removeAllItems();
        Cb_Signos.addItem("Igual a...");
        Cb_Signos.addItem("Menor Que...");
        Cb_Signos.addItem("Mayor Que...");
        Cb_Signos.addItem("Menor o Igual Que...");
        Cb_Signos.addItem("Mayor o Igual Que...");
    }
    
    private String getSigno(){
        String Signo="";
        switch(Cb_Signos.getSelectedIndex()){
            case 0 -> Signo="=";
            case 1 -> Signo="<";
            case 2 -> Signo=">";
            case 3 -> Signo="<=";
            case 4 -> Signo=">="; 
        }
        return Signo;
    }
    
    private List<String> getSelected(){
        int seleccionado=T_Resultados.getSelectedRow();
        List<String>Seleccionado=this.Resultados.get(seleccionado);
        return Seleccionado; 
        
    }
    
    private void InicializarCampos(String Tabla){
        Atributos=Conexion_Actual.GetAtributosTabla(Tabla);
        Cb_Atributo.removeAllItems();
        for(String Atributo : Atributos){
            Cb_Atributo.addItem(Atributo);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_Actualizar;
    private javax.swing.JButton B_Buscar;
    private javax.swing.JButton B_Eliminar;
    private javax.swing.JComboBox<String> Cb_Atributo;
    private javax.swing.JComboBox<String> Cb_Signos;
    private javax.swing.JComboBox<String> Cb_Tablas;
    private javax.swing.JTextField JF_Criterio;
    private javax.swing.JTable T_Resultados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
